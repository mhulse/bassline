//======================================================================
// Functions:
//======================================================================

// Remove units from number.
//
// @see https://github.com/mhulse/rex/issues/77

@function unitless($num) {
	
	@return ($num / ($num * 0 + 1));
	
}

//----------------------------------------------------------------------

// `px` to `em`; a.k.a., convert `px` to relative unit.
//
// @see 

@function em($px: $font-size-base, $context: $font-size-base) {
	
	@return (unitless($px) / unitless($context)); // Have `baseline()` use?
	
}

//----------------------------------------------------------------------

// Simple baseline mixin calculator.
//
// Usage:
// ```
// .class1 {
//     font-size: em(25)+rem;                  // (25 / 16) = 1.5625
//     line-height: baseline(25, .625);        // (((3 / 1.5625) = 1.92) * .625) = 1.2
//     padding: (baseline(25, .375) / 2)+em 0; // (((1.92 * .375) = .72) / 2) = .36
// }
// ```
//
// Output:
// ```
// .class1 {
//     font-size: 1.5625rem;
//     line-height: 1.2;
//     padding: 0.36em 0;
// }
// ```

@function baseline($px: $font-size-base, $offset: 1, $context: $line-height-base) {
	
	$px: unitless($px);
	$offset: unitless($offset);
	$context: unitless($context);
	
	@return ((($context * ceil($px / $context)) / $px) * $offset);
	
}

//----------------------------------------------------------------------

// Convert `px` to `%`.
//
// Formula: ([desired `font-size` in `px`] / [parent `font-size` in `px`]) * `100`
// Example: (`12px` / `16px`) * `100` = `75%`
//
// Usage:
// ```
// ...
// ```
//
// Output:
// ```
// ...
// ```

@function px2pct($px: $font-size-base, $context: $font-size-base) {
	
	@return ((unitless($px) / unitless($context)) * 100);
	
}

//----------------------------------------------------------------------

// Convert `px` to `pt`.
//
// Formula: [desired `font-size` in `px`] * ([`pts` per `in`] / [`px` per `in`])  
// Example: `16px` * (`72pt` / `96px`) = `12pt`
//
// Usage:
// ```
// ...
// ```
//
// Output:
// ```
// ...
// ```

@function px2pt($px: $font-size-base) {
	
	@return (unitless($px) * (72 / 96));
	
}

//----------------------------------------------------------------------

// Convert `em` to `px`.
//
// Formula: [desired `font-size` in `em`] * [parent `font-size` in `px`]
// Example: `.75em` * `16px` = `12px`
//
// Usage:
// ```
// ...
// ```
//
// Output:
// ```
// ...
// ```

@function em2px($em, $context: $font-size-base) {
	
	@return (unitless($em) * unitless($context));
	
}

//----------------------------------------------------------------------

// Convert `em` to `%`:
//
// Formula: [desired `font-size` in `em`] * `100`
// Example: `.75em` * `100` = `75%`
//
// Usage:
// ```
// ...
// ```
//
// Output:
// ```
// ...
// ```

@function em2px($em) {
	
	@return (unitless($em) * 100);
	
}

//----------------------------------------------------------------------
