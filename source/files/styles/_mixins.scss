//======================================================================
// Mixins:
//======================================================================

// Simple baseline mixin.
//
// Usage:
//
// ```
// @import "functions";
// address {
//     @include baseline($size: 16, $offset: .75, $optional: "italic", $family: "Arial, sans-serif");
//     @include baseline($size: 16, $offset: .75, $optional: "bold");
//     @include baseline($size: 16, $offset: .75, $family: "Georgia, serif");
//     @include baseline($size: 16, $offset: .75);
//     @include baseline($size: 16);
// }
// ```
//
// Output:
//
// ```
// address {
//     font: italic 1rem/1.125 Arial, sans-serif;
//     font: bold 1rem/1.125;
//     font: 1rem/1.125 Georgia, serif;
//     font-size: 1rem;
//     line-height: 1.125;
//     font-size: 1rem;
//     line-height: 1.5;
//     margin: 0.75rem 0;
// }
//
// @see http://stackoverflow.com/questions/3525007
// @see http://stackoverflow.com/a/12523209/922323
// @see http://www.impressivewebs.com/css-font-shorthand-property-cheat-sheet/
//
// @param { integer } $size The `font-size`.
// @param { integer } $offset Baseline offset.
// @param { string } $unit The `font-size` unit.
// @param { string } $optional Font shorthand "optionals".
// @param { string } $family The `font-family`.
// @return { string } Longhand `font-family` and `line-height` or shorthand `font`.

@mixin baseline($size, $offset: 1, $unit: rem, $optional: null, $family: null) {
	
	$font-size: #{relative($size)}$unit;
	$line-height: baseline($size, $offset);
	
	@if $optional or $family {
		
		font: unquote($optional) $font-size/$line-height unquote($family);
		
	} @else {
		
		font-size: $font-size;
		line-height: $line-height;
		
	}
	
}
