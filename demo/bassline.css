@charset "UTF-8";

/**
 * @see http://www.aisleone.net/2009/design/8-ways-to-improve-your-typography/
 * @see http://markboulton.co.uk/journal/five-simple-steps-to-better-typography
 * @see http://webtypography.net/toc/
 * @see http://www.alistapart.com/articles/more-meaningful-typography/
 * @see http://modularscale.com/
 */

/*----------------------------------( NORMALIZE )----------------------------------*/

/*! normalize.css v2.0.1 | MIT License | git.io/normalize */article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-family:sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{margin:0}a:focus{outline:thin dotted}a:active,a:hover{outline:0}h1{font-size:2em}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}mark{background:#ff0;color:#000}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em}pre{white-space:pre;white-space:pre-wrap;word-wrap:break-word}q{quotes:"\201C" "\201D" "\2018" "\2019"}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:0}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}button,input{line-height:normal}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],input[disabled]{cursor:default}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="search"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}

/*----------------------------------( ROOT ELEMENT )----------------------------------*/

/**
 * The `<html>` element represents the root of an HTML document.
 */

html {
	height: 100%; /* Expand to height of browser window. */
	overflow-y: scroll; /* Force scrollbar in non-IE. */
	-webkit-text-size-adjust: 100%; /* Remove iOS text size adjust without disabling user zoom. */
}

/*----------------------------------( SECTIONS )----------------------------------*/

/**
 * The `<body>` element represents the main content of the document.
 *
 * Baseline grid:
 *
 * Base font size = 16px or 100% or 1em.
 * Base line height = 24px or 150% or 1.5em.
 *
 * Rule: Make sure all elements take up a vertical height (including
 * margins) are multiples of our base line height (24).
 * 
 * Calculate line height by dividing base line height by desired font size.
 *
 * If the font size greater than `24px`, then base your calculations on
 * the next full `line-height` value up: `1.5` * `2` = `3` (`48px`). For
 * example, if the desired font size is `2.875em` (`46px`), the math would
 * be: (`1.5` * `2`) / `2.875` = `1.04347826086957`.
 *
 * Line height chart:
 *
 * | x1 = (1.5em)     | x2 = (3em)                   | x3 = (4.5em)                  | x4 = (6em)                  | x5 = (7.5em)                   |
 * | 0 - 24px (1.5em) | 25px (1.563em) - 48px (3.em) | 49px (3.063em) - 72px (4.5em) | 73px (4.563em) - 96px (6em) | 97px (6.063em) - 120px (7.5em) |
 * |                  |                              |                               |                             |                                |
 *
 * Important: WebKit needs at least ten-millionth decimal places; for
 * example: `line-height: 1.3333333;` (that's 7 decimal places).
 *
 * @see https://gist.github.com/4277585
 * @see http://advent2012.digitpaint.nl/13/
 * @see http://www.netmagazine.com/tutorials/preserving-vertical-rhythm-css-and-jquery
 * @see http://www.awayback.com/revised-font-stack/
 * @see http://code.stephenmorley.org/html-and-css/the-myth-of-web-safe-fonts/
 * @see http://stackoverflow.com/questions/2703056/body-font-size-100-01-vs-body-font-size-100
 * @see http://www.sitepoint.com/typography-baseline-rhythm-deciphered/
 * @see http://modularscale.com/scale/?px1=16&px2=46&ra1=1.618&ra2=0
 */

body {
	font: 100.01%/1.5 Arial, sans-serif; /* Serif: Cambria, Georgia, serif; */
	color: #000;
	/* Improve default text rendering, handling of kerning pairs and ligatures: */
	-webkit-font-smoothing: antialiased;
	font-smoothing: antialiased;
	text-rendering: optimizeLegibility;
	/* Initial height of `<html>`, but will expand taller if necessary: */
	min-height: 100%; /* Compliant browsers. */
	_height: 100%; /* IE6 treats `height` as `min-height`. */
}

/**
 * The `<section>` element represents a generic document or application
 * section. In this context, a section is a thematic grouping of content,
 * typically with a header, possibly with a footer. Examples include
 * chapters in a book, the various tabbed pages in a tabbed dialog box, or
 * the numbered sections of a thesis. A web site's home page could be
 * split into sections for an introduction, news items, contact information.
 */

section {}

/**
 * The `<nav>` element represents navigation for a document. It is a
 * section containing links to other documents or to parts within the
 * current document.
 *
 * Not all groups of links on a page need to be in a this element — only
 * groups of primary navigation links. In particular, it is common for
 * footers to have a list of links to various key parts of a site, but the
 * `<footer>` element is more appropriate in such cases.
 */

nav {}

/**
 * The `<article>` element represents a section of a page that consists of
 * a composition that forms an independent part of a document, page, or
 * site. This could be a forum post, a magazine or newspaper article, a
 * Web log entry, a user-submitted comment, or any other independent item
 * of content.
 */

article {}

/**
 * The `<aside>` element represents a section of a page consisting of
 * content that is tangentially related to the content around the
 * `<aside>` element, and which could be considered separate from that
 * content. Such sections are often represented as sidebars in printed
 * typography.
 */

aside {}

/**
 * Represent headings and subheadings. These elements rank in importance
 * according to the number in their name. The `<h1>` element is said to
 * have the highest rank, the `<h6>` element has the lowest rank, and two
 * elements with the same name have equal rank.
 *
 * Note: The `.h1`-`.h6` classes should be used to maintain the
 * semantically appropriate heading levels.
 *
 * Attention: Classes NOT for use on non-headings.
 *
 * @see https://groups.google.com/d/topic/object-oriented-css/GE1uzU2Bu48/discussion
 * @see http://www.stubbornella.org/content/2011/09/06/style-headings-using-html5-sections/
 * @see https://github.com/stubbornella/oocss/blob/master/core/heading/heading.css
 * @see http://csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css/
 */

h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 { margin: 0; }

h1, .h1 {
	font-size: 2.875em; /* 46px */
	line-height: 1.04347826086957;
}
h2, .h2 {
	font-size: 2.5em; /* 40px */
	line-height: 1.2;
}
h3, .h3 {
	font-size: 2.125em; /* 34px */
	line-height: 1.41176470588235;
}
h4, .h4 {
	font-size: 1.75em; /* 28px */
	line-height: 1.71428571428571;
}
h5, .h5 {
	font-size: 1.375em; /* 22px */
	line-height: 1.09090909090909;
	padding: .54545454545455em 0; /* Half `line-height`. */
}
h6, .h6 {
	font-size: 1em; /* 16px */
	line-height: 1.5;
	padding: .75em 0; /* Half `line-height`. */
}

/**
 * The `<hgroup>` element represents the heading of a section. It is used
 * to group a set of `<h1>`–`<h6>` elements when the heading has multiple
 * levels, such as subheadings, alternative titles, or taglines.
 */

hgroup {}

/**
 * The `<header>` element represents the "header" of a document or section
 * of a document. It is typically used to group a set of `<h1>`–`<h6>`
 * elements to mark up a page's title with its subtitle or tagline. header
 * elements may, however, contain more than just the section's headings
 * and subheadings — e.g., version history information or publication date.
 */

header {}

/**
 * The `<footer>` element represents the "footer" of a document or section
 * of a document. It typically contains metadata about its enclosing
 * section, such as who wrote it, links to related documents, copyright
 * data, etc. Contact information for the section given in a footer should
 * be marked up using the address element.
 */

footer {}

/**
 * Represents the contact information for its enclosing section. If it is
 * a child of the body element, then it applies to the document as a whole.
 */

address {}

/*----------------------------------( GROUPING CONTENT )----------------------------------*/

/**
 * The `<p>` element represents a paragraph.
 *
 * @see http://www.smashingmagazine.com/2012/04/03/drop-caps-historical-use-and-current-best-practices/
 * @see http://css-tricks.com/snippets/css/drop-caps/
 */

p {
	font-size: 1.125em; /* 18px */
	line-height: 1.33333333333333;
	margin: 0 0 1.33333333333333em;
	-webkit-hyphens: auto;
	   -moz-hyphens: auto;
	        hyphens: auto;
}
	.firsties {
		font-family: Cambria, Georgia, serif;
		font-style: normal;
		font-weight: bold;
		font-size: 96px;
		font-size: 6rem; /* 96px */
		line-height: 1;
		color: #fff;
		background: #999;
		margin-right: 12px;
		margin-right: .75rem; /* 12px */
		padding: 0 16px;
		padding: 0 1rem;
		float: left;
		display: inline;
		-webkit-border-radius: 5px;
		        border-radius: 5px;
		-webkit-box-shadow: inset 0 0 20px 5px rgba(0, 0, 0, .5);
		        box-shadow: inset 0 0 20px 5px rgba(0, 0, 0, .5);
		text-shadow: 0 0 5px rgba(0, 0, 0, .75);
	}

/**
 * The `<hr>` element represents a paragraph-level thematic break. It
 * separates different topics within a section of prose, or between scenes
 * in a novel.
 *
 * @see https://gist.github.com/4277585
 * @see https://github.com/h5bp/html5-boilerplate/blob/b378ce239dfb017e32fbeacc5ab0346258b089e2/css/main.css#L42-L53
 * @see https://github.com/twitter/bootstrap/blob/070c125ceceb2a164773f51226950350445160ee/docs/assets/css/bootstrap.css#L876-L881
 */

hr, .hr1, .hr2, .hr3, .hr4 {
	/* `border` + `height` + `margin` = base line height (`1.5em` or `24px`). */
	border: 0;
	border-top: .063em solid #ccc; /* 1px */
	height: .063em; /* 1px */
	margin: .688em 0; /* 11px */
	padding: 0;
}
	.hr2 { border-style: dotted; }
	.hr3,
	.hr4 {
		border-top-width: .125em; /* 2px */
		border-color: #999;
		margin: 1.375em 0 1.438em; /* 10px 0 11px */
	}
	.hr4 { border-style: dotted; }

/**
 * The `<pre>` element represents a block of preformatted text, in which
 * structure is represented by typographic conventions rather than by
 * elements.
 * 
 * @see https://raw.github.com/twitter/bootstrap/master/docs/assets/css/bootstrap.css
 * @see http://perishablepress.com/wrapping-content/
 */

pre {
	font: .75em/2 Monaco, Menlo, Consolas, "Courier New", monospace; /* 12px/24px */
	color: #333;
	border: 1px solid rgba(0, 0, 0, .15); /* .083em */
	background: rgba(0, 0, 0, .1);
	margin: 1.833em 0; /* 22px */
	padding: .917em; /* 11px */
	overflow: auto;
	word-break: break-all;
	word-wrap: break-word;
	white-space: pre;
	white-space: pre-wrap;
	-webkit-border-radius: 4px;
	   -moz-border-radius: 4px;
	        border-radius: 4px;
}
	pre code {
		color: inherit;
		border: 0;
		background: transparent;
		padding: 0;
		white-space: pre;
		white-space: pre-wrap;
	}

/**
 * The `<blockquote>` element represents a section that is quoted from
 * another source.
 *
 * Content inside a `<blockquote>` must be quoted from another source,
 * whose address, if it has one, may be cited in the `cite` attribute.
 *
 * @see http://html5doctor.com/blockquote-q-cite/
 * @see http://www.markinns.com/articles/full/hanging_quotation_marks
 */

blockquote {
	border-left: 3px solid #ccc;
	margin: 0 0 1.5em;
	padding: 0 0 0 1.5em;
	quotes: '“' '”';
}
	blockquote p {
		font: italic 1.125em/1.33333333333333 Cambria, Georgia, serif; /* 18px */
		text-indent: -.75em;
		word-spacing: .05em;
	}
		blockquote p:before {
			font-weight: bold;
			letter-spacing: .5ex;
			content: '“';
			content: open-quote;
		}
		blockquote p:after {
			content: '';
			content: no-close-quote;
		}
		blockquote p:last-of-type:after {
			font-weight: bold;
			content: '”';
			content: close-quote;
		}
		blockquote p:last-of-type { margin: 0; }
	blockquote footer {
		font-size: .875em; /* 14px */
		line-height: 1.71428571428571em;
		color: #666;
		margin: 0 0 1.71428571428571em;
	}
	/* For `<q>`s in `<blockquote>`s: */
	blockquote q:before {
		content: '‘';
		content: open-quote;
	}
	blockquote q:after {
		content: '’';
		content: close-quote;
	}
		blockquote q q:before {
			content: '“';
			content: open-quote;
		}
		blockquote q q:after {
			content: '”';
			content: close-quote;
		}

/**
 * The `<ol>` element represents a list of items, where the items have
 * been intentionally ordered, such that changing the order would change
 * the meaning of the list.
 *
 * The `<ul>` element represents a list of items, where the order of the
 * items is not important — that is, where changing the order would not
 * materially change the meaning of the list.
 *
 * The `<li>` element represents a list item. If its parent element is an
 * `<ol>`, `<ul>`, or `<menu>` element, then the element is an item of the
 * parent element's list, as defined for those elements. Otherwise, the
 * list item has no defined list-related relationship to any other `<li>`
 * element.
 */

ol,
ul {
	font-size: 1em; /* 16px */
	line-height: 1.5em; /* 24px */
	margin: 0 0 1.5em;
	padding: 0;
	list-style-position: inside;
}
	li ol,
	li ul { margin: 0 0 0 3em; }

/**
 * The `<dl>` (description list) element represents a description list
 * consisting of zero or more name-value groups. Each group must consist
 * of one or more names (dt elements) each followed by one or more values
 * (dd elements).
 *
 * Name-value groups may be terms and definitions, metadata topics and
 * values, or any other groups of name-value data. The values within a
 * group are alternatives; multiple paragraphs forming part of the same
 * value must all be given within the same dd element.
 *
 * The `<dt>` (description term) element represents the term, or name,
 * part of a term-description group in a description list (`<dl>` element).
 *
 * The `<dd>` (description definition) element represents the description,
 * definition, or value, part of a term-description group in a description
 * list (`<dl>` element).
 *
 * @see http://www.maxdesign.com.au/articles/definition/
 */

dl {
	margin: 0 0 1.5em;
	padding: 0;
}
	dl dt { font-weight: bold; }
	dl dd { margin-left: 1.5em; }

/**
 * The `<figure>` element represents some flow content, optionally with a
 * caption, that is self-contained and is typically referenced as a single
 * unit from the main flow of the document.
 *
 * The figure element can be used to annotate illustrations, diagrams,
 * photos, code listings, etc., that are referenced in the main content of
 * the document, but that could, without affecting the flow of the
 * document, be moved away from that primary content — e.g., to the side
 * of the page, to dedicated pages, or to an appendix.
 *
 * The `<figcaption>` element represents a caption or legend for the rest
 * of the contents of the `<figcaption>` element's parent figure element,
 * if any.
 */

figure {}
	figcaption {}

/**
 * The `<div>` element has no special meaning at all. It represents its
 * children. It can be used with the `class`, `lang`, and `title`
 * attributes to mark up semantics common to a group of consecutive
 * elements.
 */

div {}

/*----------------------------------( TEXT-LEVEL SEMANTICS )----------------------------------*/

/**
 * If the `<a>` element has an `href` attribute, then it represents a
 * hyperlink (a hypertext anchor). If the `<a>` element has no `href`
 * attribute, then the element represents a placeholder for where a link
 * might otherwise have been placed, if it had been relevant.
 *
 * The `target`, `rel`, `media`, `hreflang`, and `type` attributes must be
 * omitted if the `href` attribute is not present.
 */

a {
	color: #000;
	text-decoration: none;
}
	a:visited { color: #000; }
	a:visited:hover,
	a:focus,
	a:focus:hover,
	a:hover,
	a:active {
		color: #d11001;
		text-decoration: none;
	}

/**
 * The `<em>` element represents stress emphasis of its contents. The
 * level of emphasis that a particular piece of content has is given by
 * its number of ancestor em elements. The 'stress' being referred to is
 * linguistic. If spoken, this stress would be emphasized pronunciation on
 * a word that can change the nuance of a sentence.
 *
 * The `<i>` element represents a span of text in an alternate voice or
 * mood, or otherwise offset from the normal prose, such as a taxonomic
 * designation, a technical term, an idiomatic phrase from another
 * language, a thought, a ship name, or some other prose whose typical
 * typographic presentation is italicized.
 *
 * Only use `<i>` when nothing more suitable is available — e.g., `<em>`
 * for text with stress emphasis, `<strong>` for text with semantic
 * importance, `<cite>` for titles in a citation or bibliography, `<dfn>`
 * for defining a word, and `<var>` for mathematical variables.
 */

em,
i {}

/**
 * The `<strong>` element represents strong importance for its contents.
 * Indicate relative importance by nesting strong elements; each strong
 * element increases the importance of its contents. Changing the
 * importance of a piece of text with the strong element does not change
 * the meaning of the sentence.
 *
 * The `<b>` element represents a span of text to be stylistically offset
 * from the normal prose without conveying any extra importance. Examples
 * are key words in a document abstract, product names in a review, or
 * other spans of text whose typical typographic presentation is bold.
 *
 * The `<b>` element should be used as a last resort when no other element
 * is more appropriate. In particular, headings should use the `<h1>` to
 * `<h6>` elements, stress emphasis should use the `<em>` element,
 * importance should be denoted with the `<strong>` element, and text
 * marked or highlighted should use the `<mark>` element.
 */

strong,
b { letter-spacing: .015em; }

/**
 * The `<small>` element represents side comments such as small print. It
 * is not intended to be presentational. The `<small>` element should not
 * be used for extended spans of text such as multiple paragraphs, lists,
 * or sections of text. It is only intended for short runs of text.
 */

small,
p.small {
	font-size: .875em; /* 14px */
	line-height: 1.71428571428571em;
	margin: 0 0 1.71428571428571em;
}

/**
 * The `<s>` element represents contents that are no longer accurate or no
 * longer relevant.
 */

s { color: #666; }

/**
 * Represents the title of a work.
 */

cite {}

/**
 * The `<cite>` element represents the title of a work (e.g. a book, a
 * paper, an essay, a poem, a score, a song, a script, a film, a TV show,
 * a game, a sculpture, a painting, a theater production, a play, an
 * opera, a musical, an exhibition, a legal case report, etc). This can be
 * a work that is being quoted or referenced in detail (i.e. a citation),
 * or it can just be a work that is mentioned in passing.
 *
 * A person's name is not the title of a work — even if people call that
 * person a piece of work — and the element must therefore not be used to
 * mark up people's names. (In some cases, the `<b>` element might be
 * appropriate for names; e.g. in a gossip article where the names of
 * famous people are keywords rendered with a different style to draw
 * attention to them. In other cases, if an element is really needed, the
 * `<span>` element can be used.)
 *
 * @see http://html5doctor.com/blockquote-q-cite/
 */

q { quotes: '“' '”' '‘' '’' '“' '”' '‘' '’'; } /* Four levels of nested quotes. */
/* Extra content definitions for pre-2011 WebKit: */
q:before {
	content: '“';
	content: open-quote;
}
q:after {
	content: '”';
	content: close-quote;
}
	q q:before {
		content: '‘';
		content: open-quote;
	}
	q q:after {
		content: '’';
		content: close-quote;
	}

/**
 * The `<dfn>` element represents the defining instance of a term. The
 * paragraph, description list group, or section that is the nearest
 * ancestor of the `<dfn>` element must also contain the definition(s) for
 * the term given by the `<dfn>` element.
 *
 * The `<abbr>` element represents an abbreviation or acronym. The
 * optional `title` attribute may be used to provide an expansion of the
 * abbreviation. If specified, the `title` attribute must contain an
 * expansion of the abbreviation and nothing else.
 */

dfn,
dfn[title],
abbr,
abbr[title] { border-bottom: 1px dotted #666; }

/**
 * The `<data>` element links a given content with a machine-readable
 * translation. If the content is time- or date-related, the `<time>` must
 * be used.
 *
 * This element is in the WHATWG version of HTML and not in the W3C draft
 * of HTML5. That means it is a highly experimental feature and shouldn't
 * be use on Web sites.
 */

data {}

/**
 * The `<time>` element represents a precise date and/or time in the
 * proleptic Gregorian calendar. The time element encodes modern dates and
 * times in a machine-readable way, so that, for example, user agents
 * could offer to add an event to the user's calendar.
 */

time {}

/**
 * The `<code>` element represents a fragment of computer code. This could
 * be an XML element name, a file name, a computer program, or any other
 * string that a computer would recognize.
 *
 * @see http://perishablepress.com/wrapping-content/
 */

code {
	font-family: Monaco, Menlo, Consolas, "Courier New", monospace;
	color: #333;
	border: 1px solid rgba(0, 0, 0, .15);
	background: rgba(0, 0, 0, .1);
	padding: 1px 3px;
	-webkit-border-radius: 3px;
	   -moz-border-radius: 3px;
	        border-radius: 3px;
	white-space: nowrap;
}

/**
 */

var {}

/**
 */

samp {}

/**
 */

kbd {}

/**
 */

sub {}

/**
 */

sup {}

/**
 */

u {}

/**
 */

mark {}

/**
 */

ruby {}

/**
 */

rt {}

/**
 */

rp {}

/**
 */

bdi {}

/**
 */

bdo {}

/**
 * The `<span>` element doesn't mean anything on its own, but can be
 * useful when used together with the global attributes, e.g. `class`,
 * `lang`, or `dir`. It represents its children.
 *
 * @see http://simplebits.com/notebook/2008/08/14/ampersands-2/
 */

span {}
	/* The italic version of an ampersand is more decorative and interesting than its roman counterpart. */
	span.amp1 {
		font-family: Baskerville, Palatino, "Book Antiqua", serif;
		font-style: italic;
	}

/**
 * The `<br>` element represents a line break. `<br>` elements must be
 * used only for line breaks that are actually part of the content, as in
 * poems or addresses. `<br>` elements must not be used for separating
 * thematic groups in a paragraph.
 */

br {}

/**
 */

wbr {}

/*----------------------------------( EDITS )----------------------------------*/

/**
 */

ins {}

/**
 */

del {}

/*----------------------------------( EMBEDED CONTENT )----------------------------------*/

/**
 */

img {}

/**
 */

iframe {}

/**
 */

embed {}

/**
 */

object {}

/**
 */

param {}

/**
 */

video {}

/**
 */

audio {}

/**
 */

source {}

/**
 */

track {}

/**
 */

canvas {}

/**
 */

map {}

/**
 */

area {}

/**
 */

svg {}

/**
 */

math {}

/*----------------------------------( TABULAR DATA )----------------------------------*/

/**
 */

table {}

/**
 */

caption {}

/**
 */

colgroup {}

/**
 */

col {}

/**
 */

tbody {}

/**
 */

thead {}

/**
 */

tfoot {}

/**
 */

tr {}

/**
 */

td {}

/**
 */

th {}

/*----------------------------------( FORMS )----------------------------------*/

/**
 */

form {}

/**
 */

fieldset {}

/**
 */

legend {}

/**
 */

label {}

/**
 */

input {}

/**
 */

button {}

/**
 */

select {}

/**
 */

datalist {}

/**
 */

optgroup {}

/**
 */

option {}

/**
 */

textarea {}

/**
 */

keygen {}

/**
 */

output {}

/**
 */

progress {}

/**
 */

meter {}

/*----------------------------------( INTERACTIVE ELEMENTS )----------------------------------*/

/**
 */

details {}

/**
 */

summary {}

/**
 */

command {}

/**
 */

menu {}

/*----------------------------------( BASSLINE )----------------------------------*/

/**
 * Baseline grid class.
 * It simulates a baseline grid based on `em`/`rems` which will allow you to size according to your site's `font-size`.
 *
 * @see https://gist.github.com/4277585
 * @see http://advent2012.digitpaint.nl/13/
 * @see http://stackoverflow.com/a/8905262/922323
 * @see http://css-tricks.com/browser-support-pseudo-elements/
 */

.bassline { position: relative; }
	/* Grid overlay: */
	.bassline:before {
		background-image: -webkit-linear-gradient(rgba(0, 255, 255, .75) 1px, transparent 1px);
		background-image: -moz-linear-gradient(rgba(0, 255, 255, .75) 1px, transparent 1px);
		background-image: linear-gradient(rgba(0, 255, 255, .75) 1px, transparent 1px);
		background-size: 100% 1.5rem;   /* Match base `line-height`. */
		background-position: 0 0;       /* Put line adjustments here. */
		background-origin: content-box; /* Regardless of padding, background will begin in the corner of the box. */
		background-attachment: local;   /* For scrolling. */
		width: 100%;
		display: block;
		position: absolute;
		top: 0;
		bottom: -1px; /* Allows for the bottom-most border to show. */
		z-index: 999; /* Above all other content. */
		content: "";
		pointer-events: none; /* The element is never the target of mouse events. */
	}
	.bassline.half:before { background-size: 100% .75rem; } /* Half base `line-height`. */
	.bassline.double:before { background-size: 100% 3rem; } /* Double base `line-height`. */
	/* Add a faux border to child elements to view where they begin/end in relationship to the baseline: */
	.bassline * {
		-webkit-box-shadow: inset 0 0 0 1px rgba(255, 0, 0, .5);
		box-shadow: inset 0 0 0 1px rgba(255, 0, 0, .5);
	}