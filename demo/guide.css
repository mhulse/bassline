/**
 * @see http://www.aisleone.net/2009/design/8-ways-to-improve-your-typography/
 * @see http://markboulton.co.uk/journal/five-simple-steps-to-better-typography
 * @see http://webtypography.net/toc/
 * @see http://www.alistapart.com/articles/more-meaningful-typography/
 * @see http://modularscale.com/
 */

/*----------------------------------( NORMALIZE )----------------------------------*/

/*! normalize.css v2.0.1 | MIT License | git.io/normalize */article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-family:sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{margin:0}a:focus{outline:thin dotted}a:active,a:hover{outline:0}h1{font-size:2em}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}mark{background:#ff0;color:#000}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em}pre{white-space:pre;white-space:pre-wrap;word-wrap:break-word}q{quotes:"\201C" "\201D" "\2018" "\2019"}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:0}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}button,input{line-height:normal}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],input[disabled]{cursor:default}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="search"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}

/*----------------------------------( ROOT ELEMENT )----------------------------------*/

/**
 * Represents the root of an HTML or XHTML document. All other elements must be descendants of this element.
 */

html {
	height: 100%; /* Expand to height of browser window. */
	overflow-y: scroll; /* Force scrollbar in non-IE. */
	-webkit-text-size-adjust: 100%; /* Remove iOS text size adjust without disabling user zoom. */
}

/*----------------------------------( SECTIONS )----------------------------------*/

/**
 * Represents the main content of an HTML document. There is only one `<body>` element in a document.
 *
 * Baseline grid:
 *
 * Base font size = 16px or 100% or 1em.
 * Base line height = 24px or 150% or 1.5em.
 * 
 * Rule: Make sure all elements take up a vertical height (including margins) are multiples of our base line height (24).
 * Calculate line height by dividing base line height by desired font size.
 * If the font size greater than 24px, then base your calculations on the next full line-height value up: 1.5 * 2 = 3 (48px).
 * For example, if the desired font size is 2.875em (46px), the math would be: (1.5 * 2) / 2.875 = 1.043478.
 *
 * Line height chart:
 *
 * | x1 = (1.5em)     | x2 = (3em)                   | x3 = (4.5em)                  | x4 = (6em)                  | x5 = (7.5em)                   |
 * | 0 - 24px (1.5em) | 25px (1.563em) - 48px (3.em) | 49px (3.063em) - 72px (4.5em) | 73px (4.563em) - 96px (6em) | 97px (6.063em) - 120px (7.5em) |
 * |                  |                              |                               |                             |                                |
 *
 * @see https://gist.github.com/4277585
 * @see http://advent2012.digitpaint.nl/13/
 * @see http://www.netmagazine.com/tutorials/preserving-vertical-rhythm-css-and-jquery
 * @see http://www.awayback.com/revised-font-stack/
 * @see http://code.stephenmorley.org/html-and-css/the-myth-of-web-safe-fonts/
 * @see http://stackoverflow.com/questions/2703056/body-font-size-100-01-vs-body-font-size-100
 * @see http://www.sitepoint.com/typography-baseline-rhythm-deciphered/
 * @see http://modularscale.com/scale/?px1=16&px2=46&ra1=1.618&ra2=0
 */

body {
	font: 100.01%/1.5 Arial, sans-serif; /* Serif: Cambria, Georgia, serif; */
	color: #000;
	/* Improve default text rendering, handling of kerning pairs and ligatures: */
	-webkit-font-smoothing: antialiased;
	font-smoothing: antialiased;
	text-rendering: optimizeLegibility;
	/* Initial height of `<html>`, but will expand taller if necessary: */
	min-height: 100%; /* Compliant browsers. */
	_height: 100%; /* IE6 treats `height` as `min-height`. */
}

/**
 * Section in a document.
 */

section {}

/**
 * Section that contains only navigation links.
 */

nav {}

/**
 * Self-contained content that could exist independently of the rest of the content.
 */

article {}

/**
 * Content set "aside" from the rest of the page content; if it is removed, the remaining content still make sense.
 */

aside {}

/**
 * Heading elements implement six levels of document headings, `<h1>` is the most important and `<h6>` is the least.
 * A heading element briefly describes the topic of the section it introduces.
 *
 * Note: The `.h1`-`.h6` classes should be used to maintain the semantically appropriate heading levels.
 * Attention: Classes NOT for use on non-headings.
 *
 * @see https://groups.google.com/d/topic/object-oriented-css/GE1uzU2Bu48/discussion
 * @see http://www.stubbornella.org/content/2011/09/06/style-headings-using-html5-sections/
 * @see https://github.com/stubbornella/oocss/blob/master/core/heading/heading.css
 * @see http://csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css/
 */

h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 { margin: 0; }

h1, .h1 {
	font-size: 2.875em; /* 46px */
	line-height: 1.04347826086957;
}
h2, .h2 {
	font-size: 2.5em; /* 40px */
	line-height: 1.2;
}
h3, .h3 {
	font-size: 2.125em; /* 34px */
	line-height: 1.41176470588235;
}
h4, .h4 {
	font-size: 1.75em; /* 28px */
	line-height: 1.71428571428571;
}
h5, .h5 {
	font-size: 1.375em; /* 22px */
	line-height: 1.09090909090909;
	padding: .54545454545455em 0; /* Half `line-height`. */
}
h6, .h6 {
	font-size: 1em; /* 16px */
	line-height: 1.5;
	padding: .75em 0; /* Half `line-height`. */
}

/**
 * Groups a set of `<h1>` to `<h6>` elements when a heading has multiple levels.
 */

hgroup {}

/**
 * The header of a page or section. It often contains a logo, the title of the Web site and a navigational table of content.
 */

header {}

/**
 * The footer for a page or section. It often contains a copyright notice, some links to legal information or addresses to give feedback.
 */

footer {}

/**
 * Section containing contact information.
 */

address {}

/*----------------------------------( GROUPING CONTENT )----------------------------------*/

/**
 * Defines a portion that should be displayed as a paragrah.
 */

p {
	font-size: 1.125em; /* 18px */
	line-height: 1.333333;
	margin: 0 0 1.333333em;
	-webkit-hyphens: auto;
	   -moz-hyphens: auto;
	        hyphens: auto;
}
	.firsties {
		font-family: Cambria, Georgia, serif;
		font-style: normal;
		font-weight: bold;
		font-size: 96px;
		font-size: 6rem; /* 96px */
		line-height: 1;
		color: #fff;
		background: #999;
		margin-right: 12px;
		margin-right: .75rem; /* 12px */
		padding: 0 16px;
		padding: 0 1rem;
		float: left;
		display: inline;
		-webkit-border-radius: 5px;
		        border-radius: 5px;
		-webkit-box-shadow: inset 0 0 20px 5px rgba(0, 0, 0, .5);
		        box-shadow: inset 0 0 20px 5px rgba(0, 0, 0, .5);
		text-shadow: 0 0 5px rgba(0, 0, 0, .75);
	}

/**
 * Represents a thematic break between paragraphs of a section or article or any longer content.
 *
 * @see https://gist.github.com/4277585
 * @see https://github.com/h5bp/html5-boilerplate/blob/b378ce239dfb017e32fbeacc5ab0346258b089e2/css/main.css#L42-L53
 * @see https://github.com/twitter/bootstrap/blob/070c125ceceb2a164773f51226950350445160ee/docs/assets/css/bootstrap.css#L876-L881
 */

hr, .hr1, .hr2, .hr3, .hr4 {
	/* `border` + `height` + `margin` = base line height (`1.5em` or `24px`). */
	border: 0;
	border-top: .063em solid #ccc; /* 1px */
	height: .063em; /* 1px */
	margin: .688em 0; /* 11px */
	padding: 0;
}
	.hr2 { border-style: dotted; }
	.hr3,
	.hr4 {
		border-top-width: .125em; /* 2px */
		border-color: #999;
		margin: .625em 0 .688em; /* 10px 0 11px */
	}
	.hr4 { border-style: dotted; }

/**
 * Indicates that its content is preformatted and that this format must be preserved.
 * 
 * @see https://github.com/twitter/bootstrap/blob/master/less/code.less
 */

pre {
	font: .75em/2 Monaco, Menlo, Consolas, "Courier New", monospace; /* 12px/24px */
	color: #333;
	background-color: #ddd;
	background-color: rgba(0, 0, 0, .1);
	border-width: 1px; /* .083em */
	border-style: solid;
	border-color: #ccc;
	border-color: rgba(0, 0, 0, .15);
	margin: 1.833em 0; /* 22px */
	padding: .917em; /* 11px */
	display: block;
	-webkit-border-radius: 4px;
	-moz-border-radius: 4px;
	border-radius: 4px;
	word-break: break-all;
	word-wrap: break-word;
	white-space: pre;
	overflow: auto;
}

/**
 * Represents a citation.
 *
 * @see http://html5doctor.com/blockquote-q-cite/
 * @see http://www.markinns.com/articles/full/hanging_quotation_marks
 */


blockquote {
	border-left: 3px solid #ccc;
	margin: 0 0 1.5em;
	padding: 0 0 0 1.5em;
	quotes: '“' '”';
}
	blockquote p {
		font: italic 1.125em/1.33333333333333 Cambria, Georgia, serif; /* 18px */
		text-indent: -.75em;
		word-spacing: .05em;
	}
		blockquote p:before {
			font-weight: bold;
			letter-spacing: .5ex;
			content: '“';
			content: open-quote;
		}
		blockquote p:after {
			content: '';
			content: no-close-quote;
		}
		blockquote p:last-of-type:after {
			font-weight: bold;
			content: '”';
			content: close-quote;
		}
		blockquote p:last-of-type { margin: 0; }
	blockquote footer {
		font-size: .875em; /* 14px */
		line-height: 1.71428571428571em;
		color: #666;
		margin: 0 0 1.71428571428571em;
	}
	/* For `<q>`s in `<blockquote>`s: */
	blockquote q:before {
		content: '‘';
		content: open-quote;
	}
	blockquote q:after {
		content: '’';
		content: close-quote;
	}
		blockquote q q:before {
			content: '“';
			content: open-quote;
		}
		blockquote q q:after {
			content: '”';
			content: close-quote;
		}

/**
 * `<ol>` (ordered list) defines an ordered list of items, that is a list which change its meaning if we change the order of its elements.
 * `<ul>` (unordered list) defines an unordered list of items.
 * `<li>` (list item) defines a item of a enumeration list often preceded by a bullet in English.
 */

ol,
ul {
	font-size: 1em; /* 16px */
	line-height: 1.5em; /* 24px */
	margin: 0 0 1.5em;
	padding: 0;
	list-style-position: inside;
}
	li ol,
	li ul { margin: 0 0 0 3em; }

/**
 * `<dl>` (definition list) defines a definition list, that is a list of terms and their associated definitions.
 * `<dt>` (definition term) represents a term defined by the next `<dd>`.
 * `<dd>` (definition description) represents the definition of the terms immediately listed before it.
 *
 * @see http://www.maxdesign.com.au/articles/definition/
 */

dl {}
	dl dt {}
	dl dd {}

/**
 * `<figure>` represents a figure illustrated a part of the document.
 * `<figcaption>` represents the legend of a figure.
 */

figure {}
	figcaption {}

/**
 * Represents a generic container with no special meaning.
 */

div {}

/*----------------------------------( TEXT-LEVEL SEMANTICS )----------------------------------*/

/**
 * Represents an hyperlink, linking to another resource.
 */

a {
	color: #000;
	text-decoration: none;
}
	a:visited { color: #000; }
	a:visited:hover,
	a:focus,
	a:focus:hover,
	a:hover,
	a:active {
		color: #d11001;
		text-decoration: none;
	}

/**
 * `<em>` represents emphasized text, like a stress accent.
 * `<i>` represents some text in an alternate voice or mood, or at least of different quality, such as a taxonomic designation, a technical term, an idiomatic phrase, a thought or a ship name.
 */

em,
i {}

/**
 * `<strong>` represents especially important text.
 * `<b>` represents a text which to which attention is drawn for utilitarian purposes. It doesn't convey extra importance and doesn't implicate an alternate voice.
 */

strong,
b { letter-spacing: .015em; }

/**
 * Represents a side comment, that is text like a disclaimer, a copyright which is not essential to the comprehension of the document.
 */

small,
p.small {
	font-size: .875em; /* 14px */
	line-height: 1.71428571428571em;
	margin: 0 0 1.71428571428571em;
}

/**
 * Represents content that is no longer accurate or relevant.
 */

s { color: #666; }

/**
 * Represents the title of a work.
 */

cite {}

/**
 * Represents an inline quotation.
 *
 * @see http://html5doctor.com/blockquote-q-cite/
 */

q { quotes: '“' '”' '‘' '’' '“' '”' '‘' '’'; } /* Four levels of nested quotes. */
/* Extra content definitions for pre-2011 WebKit: */
q:before {
	content: '“';
	content: open-quote;
}
q:after {
	content: '”';
	content: close-quote;
}
	q q:before {
		content: '‘';
		content: open-quote;
	}
	q q:after {
		content: '’';
		content: close-quote;
	}

/*
<dfn> 	Represents a term whose definition is contained in its nearest ancestor content.
<abbr> 	Represents an abbreviation or an acronym, eventually with its meaning.
<data> This element has been added in HTML5 	Associates to its content a machine-readable equivalent. (This element is only in the WHATWG version of the HTML standard, and not in the W3C version of HTML5).
<time> This element has been added in HTML5 	Represents a date and time value, eventually with a machine-readable equivalent.
<code> 	Represents some computer code.
<var> 	Represents a variable, that is an actual mathematical expression or programming context, an identifier representing a constant, a symbol identifying a physical quantity, a function parameter, or a mere placeholder in prose.
<samp> 	Represents the output of a program or a computer.
<kbd> 	Represents user input, often from the keyboard, but not necessary, it may represent other input, like transcribed voice commands.
<sub>,<sup> 	Represents a subscript, respectively a superscript.
<u> 	Represents unarticulate non-textual annoatation, such labeling the text as being misspelt or labeling a proper name in Chinese text.
<mark> This element has been added in HTML5 	Represents text highlighted for reference purposes, that is for its relevance in another context.
<ruby> This element has been added in HTML5 	Represents content to be marked with ruby annotations, short runs of text presented alongside the text. This is often used in conjunction with East Asian language where the annotations act as a guide for pronunciation, like the Japanese furigana.
<rt> This element has been added in HTML5 	Represents the text of a ruby annotation.
<rp> This element has been added in HTML5 	Represents parenthesis around a ruby annotation, used to display the annotation in an alternate way by browsers not supporting the standard display for annotations.
<bdi> This element has been added in HTML5 	Represents text that must be isolated from its surrounding for bidirectional text formatting. It allows to embed span of text with a different, or unknown, directionality.
<bdo> 	Represents the directionality of its children, in order to explicitly override the Unicode bidirectional algorithm.
<span> 	Represents text with no specific meaning. This has to be used when no other text-semantic element conveys an adequate meaning, which, in this case, is often brought by global attributes like class, lang, or dir.
*/

/**
 * The italic version of an ampersand is more decorative and interesting than its roman counterpart.
 *
 * @see http://simplebits.com/notebook/2008/08/14/ampersands-2/
 */

span {}
	span.amp {
		font-family: Baskerville, Palatino, "Book Antiqua", serif;
		font-style: italic;
	}

/**
 * Represents a line break.
 */

br {}

/**
 * Represents a line break opportunity, that is a suggested wrapping point in order to improve readability of text split on several lines.
 */

wbr {}

/*----------------------------------( EDITS )----------------------------------*/

/**
 * Defines an addition to the document.
 */

ins {}

/**
 * Defines a removal from the document.
 */

del {}

/*----------------------------------( EMBEDED CONTENT )----------------------------------*/

/*
<img> 	Represents an image.
<iframe> 	Represents a nested browsing context, that is an embedded HTML document.
<embed> This element has been added in HTML5 	Represents a integration point for an external, often non_HTML, application or interactive content.
<object> 	Represents an external resource, which will be treated as an image, an HTML sub-document or an external resource to be processed by a plugin.
<param> 	Defines parameters for use by plugins invoked by <object> elements.
<video> This element has been added in HTML5 	Represents a video, and its associated audio files and captions, with the necessary interface to play it.
<audio> This element has been added in HTML5 	Represents a sound, or an audio stream.
<source> This element has been added in HTML5 	Allows authors to specify alternative media resources for media elements like <video> or <audio>.
<track> This element has been added in HTML5 	Allows authors to specify timed text track for media elements like <video> or <audio>.
<canvas> This element has been added in HTML5 	Represents a bitmap area that scripts can be used to render graphics, like graphs, game graphics, any visual images on the fly.
<map> 	In conjunction with <area>, defines an image map.
<area> 	In conjunction with <map>, defines an image map.
<svg> This element has been added in HTML5 	Defines an embedded vectorial image.
<math> This element has been added in HTML5 	Defines a mathematical formula.
*/

/*----------------------------------( TABULAR DATA )----------------------------------*/

/*
<table> 	Represents data with more than one dimension.
<caption> 	Represents the title of a table.
<colgroup> 	Represents a set of one or more columns of a table.
<col> 	Represents a column of a table.
<tbody> 	Represents the block of rows that describes the concrete data of a table.
<thead> 	Represents the block of rows that describes the column labels of a table.
<tfoot> 	Represents the block of rows that describes the column summaries of a table.
<tr> 	Represents a row of cells in a table.
<td> 	Represents a data cell in a table.
<th> 	Represents a header cell in a table.
*/

/*----------------------------------( FORMS )----------------------------------*/

/*
<form> 	Represents a formular, consisting of controls, that can be submitted to a server for processing.
<fieldset> 	Represents a set of controls.
<legend> 	Represents the caption for a <fieldset>.
<label> 	Represents the caption of a form control.
<input> 	Represents a typed data field allowing the user to edit the data.
<button> 	Represents a button.
<select> 	Represents a control allowing the selection among a set of options.
<datalist> This element has been added in HTML5 	Represents a set of predefined options for other controls.
<optgroup> 	Represents a set of options, logically grouped.
<option> 	Represents an option in a <select> element, or a suggestion of a <datalist> element.
<textarea> 	Represents a multiline text edit control.
<keygen> This element has been added in HTML5 	Represents a key pair generator control.
<output> This element has been added in HTML5 	Represents the result of a calculation.
<progress> This element has been added in HTML5 	Represents the completion progress of a task.
<meter> This element has been added in HTML5 	Represents a scalar measurement (or a fractional value), within a known range
*/

/*----------------------------------( INTERACTIVE ELEMENTS )----------------------------------*/

/*
<details> This element has been added in HTML5 	Represents a widget from which the user can obtain additional information or controls.
<summary> This element has been added in HTML5 	Represents a summary, caption, or legend for a given <details>.
<command> This element has been added in HTML5 	Represents a command that the user can invoke.
<menu> This element has been added in HTML5 	Represents a list of commands.
*/

/*----------------------------------( UTILITIES )----------------------------------*/

/**
 * Baseline grid class.
 * It simulates a baseline grid based on `em`/`rems` which will allow you to size according to your site's `font-size`.
 *
 * @see https://gist.github.com/4277585
 * @see http://advent2012.digitpaint.nl/13/
 * @see http://stackoverflow.com/a/8905262/922323
 * @see http://css-tricks.com/browser-support-pseudo-elements/
 */

.baseline { position: relative; }
	/* Grid overlay: */
	.baseline:before {
		background-image: -webkit-linear-gradient(rgba(0, 255, 255, .75) 1px, transparent 1px);
		background-image: -moz-linear-gradient(rgba(0, 255, 255, .75) 1px, transparent 1px);
		background-image: linear-gradient(rgba(0, 255, 255, .75) 1px, transparent 1px);
		background-size: 100% 1.5rem;   /* Match base `line-height`. */
		background-position: 0 0;       /* Put line adjustments here. */
		background-origin: content-box; /* Regardless of padding, background will begin in the corner of the box. */
		background-attachment: local;   /* For scrolling. */
		width: 100%;
		display: block;
		position: absolute;
		top: 0;
		bottom: -1px; /* Allows for the bottom-most border to show. */
		z-index: 999; /* Above all other content. */
		content: "";
		pointer-events: none; /* The element is never the target of mouse events. */
	}
	.baseline.half:before { background-size: 100% .75rem; } /* Half base `line-height`. */
	.baseline.double:before { background-size: 100% 3rem; } /* Double base `line-height`. */
	/* Add a faux border to child elements to view where they begin/end in relationship to baseline: */
	.baseline * {
		-webkit-box-shadow: inset 0 0 0 1px rgba(255, 0, 0, .5);
		box-shadow: inset 0 0 0 1px rgba(255, 0, 0, .5);
	}

/**
 * Contains child margins (prevents margin collapse).
 *
 * @see http://snipplr.com/view/4831/
 */

.force {
	margin-top: -1px;
	margin-bottom: -1px;
	padding: 1px 0;
}

/*----------------------------------( DEMO ONLY )----------------------------------*/

#container {
	margin: 0 1.5em;
	padding: 1.5em 0;
}
@media only screen and (min-width: 705px) { /* 640 + 50 + 15 */
	#container {
		width: 640px;
		margin: 0 auto;
	}
}